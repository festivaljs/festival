{"version":3,"file":"festival.min.js","sources":["../index.js"],"sourcesContent":["import holiday from './chn/holiday.json';\nimport legal from './chn/legal.json';\nimport swap from './chn/swap.json';\n\nconst holidayMap = new Map(Object.entries(holiday));\nconst legalMap = new Map(legal.map((date) => [date, true]));\nconst swapMap = new Map(swap.map((date) => [date, true]));\n\nclass Festival {\n  // 构造函数中初始化一些公共变量\n  constructor() {\n    // 保存日期范围的代理\n    this.proxy = new Proxy(\n      { startDate: 20070101, endDate: 20231230 },\n      {\n        get: function (target, prop) {\n          return target[prop];\n        },\n        set: function (target, prop, value) {\n          if (!Number.isNaN(Number(value))) {\n            target[prop] = Number(value);\n            return true;\n          }\n          return false;\n        },\n      }\n    );\n    this.cache = new Map();\n  }\n\n  // 判断日期是否符合要求（限制在指定日期范围内）\n  isValidDate(date) {\n    return date >= this.proxy.startDate && date <= this.proxy.endDate;\n  }\n\n  // 获取日期信息\n  getDayInfo(date) {\n    if (!this.isValidDate(date)) {\n      return 'invalid';\n    }\n    if (this.cache.has(date)) {\n      return this.cache.get(date);\n    }\n    const holiday = holidayMap.get(date) || '非假期';\n    const isLegal = legalMap.has(date);\n    const isSwap = swapMap.has(date);\n    const isHoliday = holiday !== '非假期';\n    const result = { date, name: holiday, isHoliday, isLegal, isSwap };\n    this.cache.set(date, result);\n    return result;\n  }\n\n  // 获取假期名称\n  getHolidayName(date) {\n    return holidayMap.get(date) || '非假期';\n  }\n\n  // 获取假期集合\n  getHolidaySet() {\n    return new Set(Object.keys(holiday));\n  }\n\n  // 是否为法定节假日\n  isLegalHoliday(date) {\n    return legalMap.has(date);\n  }\n\n  // 是否为调休日\n  isSwapHoliday(date) {\n    return swapMap.has(date);\n  }\n\n  // 对外暴露的方法\n  day(date) {\n    return this.getDayInfo(date);\n  }\n\n  name(date) {\n    return this.getHolidayName(date);\n  }\n\n  isHoliday(date) {\n    return this.getDayInfo(date).isHoliday;\n  }\n\n  isLegal(date) {\n    return this.isLegalHoliday(date);\n  }\n\n  isSwap(date) {\n    return this.isSwapHoliday(date);\n  }\n}\n\nexport default new Festival();\n"],"names":["holidayMap","Map","Object","entries","holiday","legalMap","map","date","swapMap","constructor","this","proxy","Proxy","startDate","endDate","get","target","prop","set","value","Number","isNaN","cache","isValidDate","getDayInfo","has","result","name","isHoliday","isLegal","isSwap","getHolidayName","getHolidaySet","Set","keys","isLegalHoliday","isSwapHoliday","day"],"mappings":"qsOAIA,MAAMA,EAAa,IAAIC,IAAIC,OAAOC,QAAQC,IACpCC,EAAW,IAAIJ,uoDAAUK,KAAKC,GAAS,CAACA,GAAM,MAC9CC,EAAU,IAAIP,o+BAASK,KAAKC,GAAS,CAACA,GAAM,aAwFnC,IAtFf,MAEEE,cAEEC,KAAKC,MAAQ,IAAIC,MACf,CAAEC,UAAW,SAAUC,QAAS,UAChC,CACEC,IAAK,SAAUC,EAAQC,GACrB,OAAOD,EAAOC,EACf,EACDC,IAAK,SAAUF,EAAQC,EAAME,GAC3B,OAAKC,OAAOC,MAAMD,OAAOD,MACvBH,EAAOC,GAAQG,OAAOD,IACf,EAGV,IAGLT,KAAKY,MAAQ,IAAIrB,GAClB,CAGDsB,YAAYhB,GACV,OAAOA,GAAQG,KAAKC,MAAME,WAAaN,GAAQG,KAAKC,MAAMG,OAC3D,CAGDU,WAAWjB,GACT,IAAKG,KAAKa,YAAYhB,GACpB,MAAO,UAET,GAAIG,KAAKY,MAAMG,IAAIlB,GACjB,OAAOG,KAAKY,MAAMP,IAAIR,GAExB,MAAMH,EAAUJ,EAAWe,IAAIR,IAAS,MAIlCmB,EAAS,CAAEnB,OAAMoB,KAAMvB,EAASwB,UADR,QAAZxB,EAC+ByB,QAHjCxB,EAASoB,IAAIlB,GAG6BuB,OAF3CtB,EAAQiB,IAAIlB,IAI3B,OADAG,KAAKY,MAAMJ,IAAIX,EAAMmB,GACdA,CACR,CAGDK,eAAexB,GACb,OAAOP,EAAWe,IAAIR,IAAS,KAChC,CAGDyB,gBACE,OAAO,IAAIC,IAAI/B,OAAOgC,KAAK9B,GAC5B,CAGD+B,eAAe5B,GACb,OAAOF,EAASoB,IAAIlB,EACrB,CAGD6B,cAAc7B,GACZ,OAAOC,EAAQiB,IAAIlB,EACpB,CAGD8B,IAAI9B,GACF,OAAOG,KAAKc,WAAWjB,EACxB,CAEDoB,KAAKpB,GACH,OAAOG,KAAKqB,eAAexB,EAC5B,CAEDqB,UAAUrB,GACR,OAAOG,KAAKc,WAAWjB,GAAMqB,SAC9B,CAEDC,QAAQtB,GACN,OAAOG,KAAKyB,eAAe5B,EAC5B,CAEDuB,OAAOvB,GACL,OAAOG,KAAK0B,cAAc7B,EAC3B"}