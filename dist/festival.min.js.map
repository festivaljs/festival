{"version":3,"file":"festival.min.js","sources":["../index.js"],"sourcesContent":["import holiday from './chn/holiday.json'\nimport legal from './chn/legal.json'\nimport swap from './chn/swap.json'\n\nconst holidayMap = new Map(Object.entries(holiday).map(([dateStr, name]) => [Number(dateStr), name]))\nconst legalSet = new Set(legal.map((date) => Number(date)))\nconst swapSet = new Set(swap.map((date) => Number(date)))\n\nclass Festival {\n  constructor() {\n    this.proxy = new Proxy(\n      { startDate: 20070101, endDate: 20231230 },\n      {\n        get: function (target, prop) {\n          return target[prop]\n        },\n        set: function (target, prop, value) {\n          if (!Number.isNaN(Number(value))) {\n            target[prop] = Number(value)\n            return true\n          }\n          return false\n        }\n      }\n    )\n    this.cache = new Map()\n  }\n\n  isValidDate(date) {\n    return date >= this.proxy.startDate && date <= this.proxy.endDate\n  }\n\n  getDayInfo(date) {\n    if (!this.isValidDate(date)) {\n      return 'invalid'\n    }\n    if (this.cache.has(date)) {\n      return this.cache.get(date)\n    }\n    const holiday = holidayMap.get(date) || '非假期'\n    const isLegal = legalSet.has(date)\n    const isSwap = swapSet.has(date)\n    const isHoliday = holiday !== '非假期'\n    const result = { date, name: holiday, isHoliday, isLegal, isSwap }\n    this.cache.set(date, result)\n    return result\n  }\n\n  getHolidayName(date) {\n    return holidayMap.get(date) || '非假期'\n  }\n\n  getHolidaySet() {\n    return new Set(Object.keys(holiday).map((dateStr) => Number(dateStr)))\n  }\n\n  isLegalHoliday(date) {\n    return legalSet.has(date)\n  }\n\n  isSwapHoliday(date) {\n    return swapSet.has(date)\n  }\n\n  // 对外暴露的方法\n  day(date) {\n    return this.getDayInfo(Number(date))\n  }\n\n  name(date) {\n    return this.getHolidayName(Number(date))\n  }\n\n  isHoliday(date) {\n    return this.getDayInfo(Number(date)).isHoliday\n  }\n\n  isLegal(date) {\n    return this.isLegalHoliday(Number(date))\n  }\n\n  isSwap(date) {\n    return this.isSwapHoliday(Number(date))\n  }\n\n  getDaysInRange(start, end) {\n    const result = []\n    const startDate = Math.max(start, this.proxy.startDate)\n    const endDate = Math.min(end, this.proxy.endDate)\n\n    for (let date = startDate; date <= endDate; date++) {\n      result.push(this.getDayInfo(date))\n    }\n\n    return result\n  }\n\n  getLegalHolidaysInRange(start, end) {\n    const result = []\n    const startDate = Math.max(start, this.proxy.startDate)\n    const endDate = Math.min(end, this.proxy.endDate)\n\n    for (let date = startDate; date <= endDate; date++) {\n      if (legalSet.has(date)) {\n        result.push(this.getDayInfo(date))\n      }\n    }\n\n    return result\n  }\n\n  getSwapHolidaysInRange(start, end) {\n    const result = []\n    const startDate = Math.max(start, this.proxy.startDate)\n    const endDate = Math.min(end, this.proxy.endDate)\n\n    for (let date = startDate; date <= endDate; date++) {\n      if (swapSet.has(date)) {\n        result.push(this.getDayInfo(date))\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * 查询指定日期范围内的假期天数\n   * @param {Date} start 开始日期\n   * @param {Date} end 结束日期\n   * @returns {number} 假期天数\n   */\n  countHolidaysInRange(start, end) {\n    // 限制开始日期和结束日期在节假日定义范围内\n    const startDate = Math.max(start, this.proxy.startDate)\n    const endDate = Math.min(end, this.proxy.endDate)\n    let count = 0\n    // 计算假期天数\n    for (let date = startDate; date <= endDate; date++) {\n      if (this.getDayInfo(date).isHoliday) {\n        count++\n      }\n    }\n    return count\n  }\n}\n\nexport default new Festival()\n"],"names":["holidayMap","Map","Object","entries","holiday","map","dateStr","name","Number","legalSet","Set","date","swapSet","constructor","this","proxy","Proxy","startDate","endDate","get","target","prop","set","value","isNaN","cache","isValidDate","getDayInfo","has","result","isHoliday","isLegal","isSwap","getHolidayName","getHolidaySet","keys","isLegalHoliday","isSwapHoliday","day","getDaysInRange","start","end","Math","max","min","push","getLegalHolidaysInRange","getSwapHolidaysInRange","countHolidaysInRange","count"],"mappings":"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"}