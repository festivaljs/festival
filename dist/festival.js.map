{"version":3,"file":"festival.js","sources":["../index.js"],"sourcesContent":["import holiday from './chn/holiday.json'\nimport legal from './chn/legal.json'\nimport swap from './chn/swap.json'\n\nconst holidayMap = new Map(Object.entries(holiday).map(([dateStr, name]) => [Number(dateStr), name]))\nconst legalSet = new Set(legal.map((date) => Number(date)))\nconst swapSet = new Set(swap.map((date) => Number(date)))\n\nclass Festival {\n  constructor() {\n    this.proxy = new Proxy(\n      { startDate: 20070101, endDate: 20231230 },\n      {\n        get: function (target, prop) {\n          return target[prop]\n        },\n        set: function (target, prop, value) {\n          if (!Number.isNaN(Number(value))) {\n            target[prop] = Number(value)\n            return true\n          }\n          return false\n        }\n      }\n    )\n    this.cache = new Map()\n  }\n\n  isValidDate(date) {\n    return date >= this.proxy.startDate && date <= this.proxy.endDate\n  }\n\n  getDayInfo(date) {\n    if (!this.isValidDate(date)) {\n      return 'invalid'\n    }\n    if (this.cache.has(date)) {\n      return this.cache.get(date)\n    }\n    const holiday = holidayMap.get(date) || '非假期'\n    const isLegal = legalSet.has(date)\n    const isSwap = swapSet.has(date)\n    const isHoliday = holiday !== '非假期'\n    const result = { date, name: holiday, isHoliday, isLegal, isSwap }\n    this.cache.set(date, result)\n    return result\n  }\n\n  getHolidayName(date) {\n    return holidayMap.get(date) || '非假期'\n  }\n\n  getHolidaySet() {\n    return new Set(Object.keys(holiday).map((dateStr) => Number(dateStr)))\n  }\n\n  isLegalHoliday(date) {\n    return legalSet.has(date)\n  }\n\n  isSwapHoliday(date) {\n    return swapSet.has(date)\n  }\n\n  // 对外暴露的方法\n  day(date) {\n    return this.getDayInfo(Number(date))\n  }\n\n  name(date) {\n    return this.getHolidayName(Number(date))\n  }\n\n  isHoliday(date) {\n    return this.getDayInfo(Number(date)).isHoliday\n  }\n\n  isLegal(date) {\n    return this.isLegalHoliday(Number(date))\n  }\n\n  isSwap(date) {\n    return this.isSwapHoliday(Number(date))\n  }\n\n  getDaysInRange(start, end) {\n    const result = [];\n    const startDate = Math.max(start, this.proxy.startDate);\n    const endDate = Math.min(end, this.proxy.endDate);\n\n    for (let date = startDate; date <= endDate; date++) {\n      result.push(this.getDayInfo(date));\n    }\n\n    return result;\n  }\n\n  getLegalHolidaysInRange(start, end) {\n    const result = [];\n    const startDate = Math.max(start, this.proxy.startDate);\n    const endDate = Math.min(end, this.proxy.endDate);\n\n    for (let date = startDate; date <= endDate; date++) {\n      if (legalSet.has(date)) {\n        result.push(this.getDayInfo(date));\n      }\n    }\n\n    return result;\n  }\n\n  getSwapHolidaysInRange(start, end) {\n    const result = [];\n    const startDate = Math.max(start, this.proxy.startDate);\n    const endDate = Math.min(end, this.proxy.endDate);\n\n    for (let date = startDate; date <= endDate; date++) {\n      if (swapSet.has(date)) {\n        result.push(this.getDayInfo(date));\n      }\n    }\n\n    return result;\n  }\n}\n\nexport default new Festival()\n"],"names":[],"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"}